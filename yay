#!/usr/bin/env bash

APP_ROOT=$1
YAY_PATH=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
GRAPH_BUILDER=$YAY_PATH/graph-builder.js
RUN_YARN_TMUX=$YAY_PATH/run-yarn-tmux.sh

chmod +x "$GRAPH_BUILDER"
chmod +x "$RUN_YARN_TMUX"

source "$YAY_PATH"/spinner.sh
source "$YAY_PATH"/colors.sh

APP_FZF_HEADER='Select an app to run'
DEP_FZF_HEADER='Select dependencies to track (Tab to select, Enter to confirm, Esc to quit)'

check_command() {
	if ! command -v "$1" >/dev/null 2>&1; then
		print_error "\nError: $1 is missing. Please install missing utilities before proceeding."
		exit 1
	fi
}

if [ $# -eq 0 ]; then
	print_error "Error: Missing MONOREPO_PATH parameter."
	print_error "Usage: $0 <MONOREPO_PATH>" >&2
	exit 1
fi

if [ ! -d "$1" ]; then
	print_error "Error: '$1' is not a valid MONOREPO_PATH."
	exit 1
fi

# Navigate to the workspace root
cd "$APP_ROOT" || exit

start_spinner "Checking environment..."
sleep 1
check_command yarn
check_command jq
check_command entr
check_command tmux
check_command node
check_command fzf
stop_spinner $?

workspaces=$(yarn workspaces list --json | jq -r ".location" 2>/dev/null)

if [ $? -ne 0 ]; then
	print_error "Error: the path is not valid monorepo."
	exit 1
fi

# Check if the workspaces variable is empty, implying no workspaces were found
if [ -z "$workspaces" ]; then
	print_error "Error: no workspace found in the monorepo."
	exit 1
fi

start_spinner "Checking dependency graph..."
sleep 1
if [ ! -f "dep-graph.json" ]; then
	"$YAY_PATH"/graph-builder.js
fi
stop_spinner $?

selected_workspace=$(jq -r '.[] | .location' dep-graph.json |
	fzf --prompt='Workspaces> ' --header="$APP_FZF_HEADER" --cycle)

# Check if the user made a selection
if [ -z "$selected_workspace" ]; then
	echo "No workspace selected. Exiting."
	exit 1
fi

workspace_dependencies=$(jq -r ".[] | select(.location == \"$selected_workspace\") | .dependencies[]" dep-graph.json)

dep_paths=()

if [ -n "$workspace_dependencies" ]; then
	# retrieve the dependencies
	dependencies=$(echo "$workspace_dependencies" | fzf --multi --header="$DEP_FZF_HEADER" --cycle --prompt='Dependencies> ')

	start_spinner "Initializing dev session params..."
	sleep 1

	# Iterate over each path and prepend the APP_ROOT
	for path in $dependencies; do
		dep_paths+=("${APP_ROOT}/${path}")
	done
	stop_spinner $?
fi

print_success "Starting dev session..."
sleep 1
"$YAY_PATH"/run-yarn-tmux.sh "$APP_ROOT"/"$selected_workspace" "${dep_paths[@]}"
print_success "Dev session ended."
